# ==============================================================================
# Zenith V2 Master Configuration
#
# This file is the central control panel for the entire application.
# All strategy parameters, risk settings, and connection details are defined here.
# ==============================================================================
# ------------------------------------------------------------------------------
# Live Execution Engine Parameters
#
# These rules govern the behavior of the live trading engine's executor.
# ------------------------------------------------------------------------------
[execution]
# The order type the live engine will use.
# Options: "Market", "Limit" (uses Post-Only orders to be a Maker)
order_type = "Market"
# ------------------------------------------------------------------------------
# API Configuration
#
# API keys for different environments. These can be overridden via environment variables.
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Global Risk Management (Portfolio Circuit Breakers)
#
# These are the master safety rules that override all other logic.
# ------------------------------------------------------------------------------
[global_risk]
# If total portfolio equity drops this much from its peak for the session,
# the engine will halt ALL new trading activity.
max_daily_drawdown_pct = 0.10 # (10%)

# If any single bot (e.g., BTCUSDT) has this many losing trades in a row,
# only that specific bot will be temporarily disabled.
max_consecutive_losses = 7

# The number of hours a bot will be put in "time-out" after hitting the
# consecutive loss limit before it is automatically re-enabled.
bot_cooldown_hours = 4

# The maximum number of open positions any single bot is allowed to have.
# For our current architecture, this MUST be 1.
max_open_positions_per_asset = 1
# ------------------------------------------------------------------------------
# API Configuration
#
# API keys for different environments. These can be overridden via environment variables.
# ------------------------------------------------------------------------------
[api]
binance_api_key = "31fbf16926ce01bfbf2dad27e1c087fc89749d9c1ea8d5c45db3c4c99620c920"
binance_api_secret = "9ae595bb00812a75a3f1f43932599eba8177d668690a664eaea5c0f0071b9431"
# Testnet API keys (for testing)
[api.testnet]
binance_api_key = "31fbf16926ce01bfbf2dad27e1c087fc89749d9c1ea8d5c45db3c4c99620c920"
key = "31fbf16926ce01bfbf2dad27e1c087fc89749d9c1ea8d5c45db3c4c99620c920"
secret = "9ae595bb00812a75a3f1f43932599eba8177d668690a664eaea5c0f0071b9431"

# Production API keys (for live trading)
[api.production]
binance_api_key = "ROHyz8JPmZEF69VFFlGoaJThuRACq13aNSSvDaF4tAAyz45XnDtHbJQyZIbakLMA"
key = "31fbf16926ce01bfbf2dad27ROHyz8JPmZEF69VFFlGoaJThuRACq13aNSSvDaF4tAAyz45XnDtHbJQyZIbakLMAe1c087fc89749d9c1ea8d5c45db3c4c99620c920"
secret = "ymgRxY9pYXRtbDjwqtI2Fo1fK8CtctBpx5kjNNjxv1uIrmGcM6qgu7A91vgfpAaY"

# ------------------------------------------------------------------------------
# Default Backtest Configuration
#
# Parameters for the `single-run` command.
# Choose one of: "MACrossover", "SuperTrend", "ProbReversion", "FundingRateArb"
# ------------------------------------------------------------------------------
[backtest]
strategy_id = "MlStrategy"
symbol = "BTCUSDT"
interval = "1h"
initial_capital = 100000.0
start_date = "2024-01-01"
end_date = "2025-06-30"

# ------------------------------------------------------------------------------
# Simulation Engine Parameters
#
# These rules govern the behavior of the backtester's virtual exchange.
# ------------------------------------------------------------------------------
[simulation]
# Taker Fee: The fee charged for market orders. (e.g., Binance Futures is 0.04%)
taker_fee_pct = 0.0004

# Slippage: A simple model assuming slippage is a percentage of the bar's range.
# 0.1 means we assume a 10% worse fill from the close price, in the direction of the bar's range.
slippage_pct = 0.1

# ------------------------------------------------------------------------------
# Risk Management
#
# These rules govern how individual trades are sized.
# ------------------------------------------------------------------------------
[risk_management]
# The fraction of the total portfolio equity to risk per trade.
# 0.05 means 5% of equity will be at risk on any given trade.
risk_per_trade_pct = 0.01

# The distance to the stop-loss, used for calculating position size.
# 0.02 means the stop-loss is assumed to be 2% away from the entry price.
stop_loss_pct = 0.02

# ------------------------------------------------------------------------------
# Strategy Parameters
# ------------------------------------------------------------------------------
[strategies]

# Parameters for the Triple Moving Average Crossover strategy.
# - Fast/Slow MA for the signal.
# - Trend Filter MA to ensure we only trade with the larger trend.
[strategies.ma_crossover]
ma_fast_period = 10
ma_slow_period = 60
trend_filter_period = 50

# Parameters for the SuperTrend strategy with an ADX filter.
# - SuperTrend is calculated from ATR.
# - ADX filter requires trend strength to be above a threshold before entering.
[strategies.super_trend]
atr_period = 14
atr_multiplier = 3.0
adx_threshold = 25.0
adx_period = 14

# Parameters for the Probabilistic Mean Reversion strategy.
# - A signal requires price outside Bollinger Bands, RSI in overbought/sold,
#   AND ADX below a threshold (confirming a ranging market).
[strategies.prob_reversion]
bb_period = 20
bb_std_dev = 2.0
rsi_period = 14
rsi_oversold = 30.0
rsi_overbought = 70.0
adx_threshold = 20.0
adx_period = 14

# Parameters for Funding Rate Arbitrage.
[strategies.funding_rate_arb]
target_rate_threshold = 0.001  # e.g., 0.1%
basis_safety_threshold = 0.005 # e.g., 0.5% basis between spot and perp
[strategies.ml_strategy]
# The path to the trained model we created with the ml-trainer.
model_path = "models/btc_1h_rf.bin"
# ------------------------------------------------------------------------------
# Logging Configuration
#
# Controls the verbosity and output of application logs.
# ------------------------------------------------------------------------------
[logging]
# The minimum log level to display.
# Options: "error", "warn", "info", "debug", "trace"
# Default: "info"
level = "debug"

# Enable colored output for log messages (recommended for terminals).
# Default: true
colored = true

# Enable timestamps in log messages.
# Default: true
timestamps = true

# Enable thread IDs in log messages (useful for debugging async code).
# Default: false
thread_ids = false

# Enable target/module information in log messages.
# Default: true
targets = true

# Enable file logging (logs will be saved to logs/ directory).
# Default: true
file_logging = true

# The directory for log files.
# Default: "logs"
log_directory = "logs"

# The filename prefix for log files.
# Default: "zenith"
log_filename = "zenith"

# Custom log level overrides for specific modules.
# Format: "module_name=level"
# Example: ["zenith::api_client=debug", "zenith::engine=info"]
overrides = ["sqlx=warn", "zenith::engine=debug", "zenith::risk=debug"]